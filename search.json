[
  {
    "objectID": "files/nanogpt.html",
    "href": "files/nanogpt.html",
    "title": "",
    "section": "",
    "text": "# Re-import necessary libraries and re-define data since the execution state was reset\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom datetime import datetime\nimport pandas as pd\n\n# Data from the table\ndata = {\n    \"Record Time (minutes)\": [45, 31.4, 24.9, 22.3, 15.2, 13.1, 12.0, 10.8, 8.2, 7.8, 7.2, 5.03, 4.66],\n    \"Description\": [\n        \"llm.c baseline\",\n        \"Architectural modernizations & tuned learning rate\",\n        \"Introduced the Muon optimizer\",\n        \"Muon improvements\",\n        \"Pad embeddings & architectural improvements\",\n        \"Distributed the overhead of Muon\",\n        \"Upgraded PyTorch from 2.4.1 to 2.5.0\",\n        \"Untied embed and lm_head\",\n        \"Shortcuts & tweaks\",\n        \"Bfloat16 activations\",\n        \"U-net & 2x lr\",\n        \"FlexAttention\",\n        \"Attention window warmup\"\n    ],\n    \"Date\": [\n        \"05/28/24\", \"06/06/24\", \"10/04/24\", \"10/11/24\", \"10/14/24\", \"10/18/24\", \"10/18/24\", \n        \"11/03/24\", \"11/06/24\", \"11/08/24\", \"11/10/24\", \"11/19/24\", \"11/24/24\"\n    ]\n}\n\n# Convert to a DataFrame\ndf = pd.DataFrame(data)\ndf[\"Date\"] = pd.to_datetime(df[\"Date\"], format=\"%m/%d/%y\")\n\n# Sort the data by date to ensure proper plotting\ndf = df.sort_values(\"Date\")\n\n# Prepare data for plotting\ndates = df[\"Date\"]\ntimes = df[\"Record Time (minutes)\"]\ndescriptions = df[\"Description\"]\n\n# Adjust the plot to spread labels further and use more of the available space\nplt.figure(figsize=(12, 6))\nplt.plot(dates, times, linestyle=\"--\", zorder=0)\nplt.scatter(dates, times, label=\"Training Time\", marker=\"o\", s=70, zorder=100)\n\n# Add labels with arrows for clear separation, spreading them out further\nfor i, (date, time, desc) in enumerate(zip(dates, times, descriptions)):\n    # Larger offset for labels\n    if i &lt;= 1:\n        y_offset = 0\n        x_offset = pd.Timedelta(days=5)\n    elif desc == \"U-net & 2x lr\":\n        y_offset = 16 if i % 2 == 0 else 7\n        y_offset = int(y_offset*(1 - i/20))*0.8\n        x_offset = pd.Timedelta(days=0 if i % 2 == 0 else -100)\n    else:\n        y_offset = 16 if i % 2 == 0 else 7\n        y_offset = int(y_offset*(1 - i/20))\n        x_offset = pd.Timedelta(days=0 if i % 2 == 0 else -100)\n    # Plot the arrow\n    plt.annotate(\n        desc,\n        xy=(date, time),\n        xytext=(date + x_offset, time + y_offset),\n        arrowprops=dict(facecolor='black', arrowstyle=\"-\", lw=0.5),\n        fontsize=14,\n        bbox=dict(boxstyle=\"round,pad=0.3\", edgecolor=\"gray\", facecolor=\"white\", alpha=0.9, zorder=-100)\n    )\n\n# Formatting the plot\nplt.title(\"–£—Å–∫–æ—Ä–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è NanoGPT - 125M\")\nplt.xlabel(\"–î–∞—Ç–∞, 2024\")\nplt.ylabel(\"–í—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 8xH100, –º–∏–Ω—É—Ç—ã\")\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter(\"%d.%m\"))\nplt.gca().xaxis.set_major_locator(mda tes.MonthLocator())\nplt.xticks(rotation=45)\nplt.grid(alpha=0.3, linestyle=\":\")\n# plt.legend()\nplt.tight_layout()\n\n# Show the plot\nplt.savefig(\"nanogpt_speedrun.pdf\")\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Optimization for ML",
    "section": "",
    "text": "Optimization for ML\n\nCourse for 3rd year students of CS department at HSE university. 1 lecture + 1 seminar per week.\nThe course covers convex, non-convex, continuous optimization topics, especially motivated by problems and applications in Machine Learning. Various topics are covered, from fundamental materials to recent research.\nDescription of the course.\n\nYour browser does not support the video tag.\n\n\nTeam\n\n\n    \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –î–∞–Ω–∏–∏–ª –ú–µ—Ä–∫—É–ª–æ–≤\n                    \n                    –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ü–µ—Ç—Ä –û—Å—Ç—Ä–æ—É—Ö–æ–≤\n                    \n                    –°–µ–º–∏–Ω–∞—Ä–∏—Å—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ò–ª—å—è –ó–∞–±–∞—Ä–∞\n                    \n                    –°–µ–º–∏–Ω–∞—Ä–∏—Å—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ú–∞—Ä–∏—è –ú–µ–¥–≤–µ–¥–µ–≤–∞\n                    \n                    –°–µ–º–∏–Ω–∞—Ä–∏—Å—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –Ø–Ω –ú–∞–∫—Å–∏–º–æ–≤\n                    \n                    –°–µ–º–∏–Ω–∞—Ä–∏—Å—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ú–∞–∫—Å–∏–º –®—É–∫–ª–∏–Ω\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –î–∏–Ω–∞—Ä –°–∞–±–µ—Ä–æ–≤\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ú–∏—Ö–∞–∏–ª –ö–æ–Ω–æ–±–µ–µ–≤\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ö–∏—Ä–∏–ª–ª –ö–æ—Ä–æ–ª–µ–≤\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ï–ª–µ–Ω–∞ –õ—ã–∫–æ–≤–∞\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –ú–∞—Ä–∏—è –†–æ–∑–∞–µ–≤–∞\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∫–∞\n                  \n                \n              \n        \n            \n                \n                  \n                    \n                  \n                  \n                    \n                      –Æ—Ä–∏–π –ü—É—Å—Ç–æ–≤–∞–ª–æ–≤\n                    \n                    –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\n                  \n                \n              \n        \n    \n\n\nNo matching items\n\n\n\n\n–ö–æ–ª–ª–æ–∫–≤–∏—É–º\nüìú –°–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –∏ —Ç–µ–æ—Ä–µ–º\n–û—Ü–µ–Ω–∫–∞ –∑–∞ –∫–æ–ª–ª–æ–∫–≤–∏—É–º —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –∏–∑ 4 —á–∞—Å—Ç–µ–π:\n\n–í–æ–ø—Ä–æ—Å—ã –ø–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞–º - 2 –±–∞–ª–ª–∞\n–°–Ω–∞—á–∞–ª–∞ –≤—ã–¥–∞—é—Ç—Å—è 5 —Å–ª—É—á–∞–π–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π/—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞. –ù–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –¥–∞–µ—Ç—Å—è 10 –º–∏–Ω—É—Ç. –ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ —Ö–æ—Ç—è –±—ã –Ω–∞ 3 –∏–∑ 5 –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π/—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –∫–æ–ª–ª–æ–∫–≤–∏—É–º –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–∞–ª—å—à–µ, –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ x ‚àí 3 –±–∞–ª–ª–æ–≤, –≥–¥–µ x ‚Äì —á–∏—Å–ª–æ –≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∑–∞ –∫–æ–ª–ª–æ–∫–≤–∏—É–º –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è 0 –±–∞–ª–ª–æ–≤.\n–¢–µ–æ—Ä–µ–º–∞ —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º - 3 –±–∞–ª–ª–∞\n–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á - 3 –±–∞–ª–ª–∞\n–ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –≤–∞–º –≤—ã–¥–∞–µ—Ç—Å—è –±–∏–ª–µ—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞—á–∏. –ù–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –æ—Ç–≤–µ—Ç—É –¥–∞–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç. –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –±—É–¥–µ—Ç –ø–æ —Ç–µ–æ—Ä–µ–º–∞–º –∏–∑ —Å–ø–∏—Å–∫–∞. –î–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –∑–∞–¥–∞—á–∞–º —Å–æ–≤–µ—Ç—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞—á–∏ —Å —Å–µ–º–∏–Ω–∞—Ä–æ–≤. –í –ø—Ä–æ—Ü–µ—Å—Å–µ –±–µ—Å–µ–¥—ã –ø–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –ø—É–Ω–∫—Ç–∞–º –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã.\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å - 2 –±–∞–ª–ª–∞\n–ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —ç—Ç–∞–ø—ã –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –∑–∞–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–¥–∞—á—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —Ç–µ–æ—Ä–∏–µ–π. –û—Ç–≤–µ—Ç –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –≤ 2 –±–∞–ª–ª–∞.\n–í–æ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞–º –Ω–µ–ª—å–∑—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∏–∫–∞–∫–∏–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏.\n–í–æ –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä—É–∫–æ–ø–∏—Å–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ê4 –∏–ª–∏ –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –ê5.\n–ï—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –∫–æ–ª–ª–æ–∫–≤–∏—É–º–∞ —á–µ–ª–æ–≤–µ–∫ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ –ô–µ–Ω—Å–µ–Ω–∞ –¥–ª—è –≤—ã–ø—É–∫–ª–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, —É—Å–ª–æ–≤–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–µ–º—É–º–∞ –¥–ª—è –∑–∞–¥–∞—á–∏ –±–µ–∑—É—Å–ª–æ–≤–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –º–µ—Ç–æ–¥ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞, –º–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞, –º–µ—Ç–æ–¥ —Ç—è–∂–µ–ª–æ–≥–æ —à–∞—Ä–∏–∫–∞, —á—Ç–æ —Ç–∞–∫–æ–µ –±–∞—Ç—á –∏ —ç–ø–æ—Ö–∞ –∑–∞ –∫—É—Ä—Å —Å—Ç–∞–≤–∏—Ç—Å—è 0."
  },
  {
    "objectID": "program.html",
    "href": "program.html",
    "title": "",
    "section": "",
    "text": "–ó–∞–Ω—è—Ç–∏–µ 1\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –í—Å–ø–æ–º–∏–Ω–∞–µ–º –ª–∏–Ω–µ–π–Ω—É—é –∞–ª–≥–µ–±—Ä—É. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–∞—Ç—Ä–∏—á–Ω—ã–µ —Ä–∞–∑–ª–æ–∂–µ–Ω–∏—è. –°–∫–æ—Ä–æ—Å—Ç—å —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n    –ó–∞–Ω—è—Ç–∏–µ 2\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –û–¥–Ω–æ–º–µ—Ä–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è. –ù–µ—Ç–æ—á–Ω–∞—è –æ–¥–Ω–æ–º–µ—Ä–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è. –ì—Ä–∞–¥–∏–µ–Ω—Ç. –ì–µ—Å—Å–∏–∞–Ω. –ú–∞—Ç—Ä–∏—á–Ω–æ-–≤–µ–∫—Ç–æ—Ä–Ω–æ–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ.\n\n    –ó–∞–Ω—è—Ç–∏–µ 3\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ. –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π –≥—Ä–∞—Ñ.\n\n    –ó–∞–Ω—è—Ç–∏–µ 4\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –í—ã–ø—É–∫–ª–æ—Å—Ç—å. –í—ã–ø—É–∫–ª—ã–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. –í—ã–ø—É–∫–ª—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ô–µ–Ω—Å–µ–Ω–∞.\n\n    –ó–∞–Ω—è—Ç–∏–µ 5\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –°–∏–ª—å–Ω–æ –≤—ã–ø—É–∫–ª—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –£—Å–ª–æ–≤–∏–µ –ü–æ–ª—è–∫–∞ - –õ–æ—è—Å–∏–µ–≤–∏—á–∞. –õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è. –†–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—è. –í—ã–ø—É–∫–ª–æ—Å—Ç—å –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π.\n\n    –ó–∞–Ω—è—Ç–∏–µ 6\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –£—Å–ª–æ–≤–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ—Å—Ç–∏. –§—É–Ω–∫—Ü–∏—è –õ–∞–≥—Ä–∞–Ω–∂–∞. –ó–∞–¥–∞—á–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏-—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞–º–∏. –ó–∞–¥–∞—á–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏-—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞–º–∏. –¢–µ–æ—Ä–µ–º–∞ –ö–∞—Ä—É—à–∞ - –ö—É–Ω–∞ - –¢–∞–∫–∫–µ—Ä–∞.\n\n    –ó–∞–Ω—è—Ç–∏–µ 7\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –î–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n    –ó–∞–Ω—è—Ç–∏–µ 8\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ó–∞–¥–∞—á–∞ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –°–∏–º–ø–ª–µ–∫—Å –º–µ—Ç–æ–¥.\n\n    –ó–∞–Ω—è—Ç–∏–µ 9\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫. –¢–µ–æ—Ä–µ–º—ã —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –≥–ª–∞–¥–∫–æ–º —Å–ª—É—á–∞–µ (–≤—ã–ø—É–∫–ª—ã–µ, —Å–∏–ª—å–Ω–æ –≤—ã–ø—É–∫–ª—ã–µ, PL). –í–µ—Ä—Ö–Ω–∏–µ –∏ –Ω–∏–∂–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n    –ó–∞–Ω—è—Ç–∏–µ 10\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –£—Å–∫–æ—Ä–µ–Ω–Ω—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –ú–µ—Ç–æ–¥ –ü–æ–ª—è–∫–∞, –ù–µ—Å—Ç–µ—Ä–æ–≤–∞.\n\n    –ó–∞–Ω—è—Ç–∏–µ 11\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –°—É–±–≥—Ä–∞–¥–∏–µ–Ω—Ç. –°—É–±–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª. –°—É–±–≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫. –¢–µ–æ—Ä–µ–º—ã —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –Ω–µ–≥–ª–∞–¥–∫–æ–º —Å–ª—É—á–∞–µ. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–µ–≥–ª–∞–¥–∫–∏—Ö –∑–∞–¥–∞—á–∞—Ö.\n\n    –ó–∞–Ω—è—Ç–∏–µ 12\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ú–µ—Ç–æ–¥ —Å–æ–ø—Ä—è–∂–µ–Ω–Ω—ã—Ö –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤.\n\n    –ó–∞–Ω—è—Ç–∏–µ 13\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤ —É—Å–ª–æ–≤–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ - –º–µ—Ç–æ–¥ –ø—Ä–æ–µ–∫—Ü–∏–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞. –ú–µ—Ç–æ–¥ –§—Ä–∞–Ω–∫ - –í—É–ª—å—Ñ–∞. –ò–¥–µ—è –º–µ—Ç–æ–¥–∞ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞.\n\n    –ó–∞–Ω—è—Ç–∏–µ 14\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ü—Ä–æ–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –º–µ—Ç–æ–¥.\n\n    –ó–∞–Ω—è—Ç–∏–µ 15\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞. –ö–≤–∞–∑–∏–Ω—å—é—Ç–æ–Ω–æ–≤—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã.\n\n    –ó–∞–Ω—è—Ç–∏–µ 16\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –°—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫.\n\n    –ó–∞–Ω—è—Ç–∏–µ 17\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –ú–µ—Ç–æ–¥—ã —Ä–µ–¥—É–∫—Ü–∏–∏ –¥–∏—Å–ø–µ—Ä—Å–∏–∏: SAG, SVRG, SAGA. –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã.\n\n    –ó–∞–Ω—è—Ç–∏–µ 18\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –û–±—É—á–µ–Ω–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏. –û–±–æ–±—â–∞—é—â–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. Double Descent. Grokking. Mode connectivity.\n\n    –ó–∞–Ω—è—Ç–∏–µ 19\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –í–æ–ø—Ä–æ—Å—ã –æ–±—É—á–µ–Ω–∏—è –±–æ–ª—å—à–∏—Ö –º–æ–¥–µ–ª–µ–π. Lars, Lamb. Learning rate schedulers. Warm-up. MultiGPU training.\n\n    –ó–∞–Ω—è—Ç–∏–µ 20\n    \n        üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è ‚Ä¢ üìù –ó–∞–º–µ—Ç–∫–∏ ‚Ä¢ üë∑‚Äç‚ôÇÔ∏è Seminar\n    \n    –í–≤–µ–¥–µ–Ω–∏–µ –≤ –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏. –ú–µ—Ç–æ–¥ –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ –ø–æ–¥—ä—ë–º–∞. –ú–µ—Ç–æ–¥ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –õ–∞–≥—Ä–∞–Ω–∂–∞. ADMM.\n\n\nNo matching items"
  },
  {
    "objectID": "files/mds.html",
    "href": "files/mds.html",
    "title": "",
    "section": "",
    "text": "!pip install -q geopy\n\n\n[notice] A new release of pip is available: 23.2.1 -&gt; 23.3.2\n[notice] To update, run: python3.9 -m pip install --upgrade pip\n\n\n\nimport numpy as np\nfrom geopy.distance import geodesic\n\n# Estimated GPS coordinates for the specified Moscow Metro stations\n# Format: \"Station Name\": (Latitude, Longitude)\nstations_coordinates = {\n    \"Fizteh\": (55.5518, 37.3247),           # Estimated coordinates for Fizteh\n    \"Chkalovskaya\": (55.4523, 37.3926),\n    \"Slavyanski Boulevard\": (55.4347, 37.2814),\n    \"Park Kultury\": (55.4409, 37.3529),\n    \"Komsomolskaya\": (55.4629, 37.3918),\n    \"Yugo-Zapadnaya\": (55.3949, 37.2900),\n    \"Kievskaya\": (55.4440, 37.3356),\n    \"Strogino\": (55.4814, 37.2411),\n    \"Konkovo\": (55.3800, 37.3108),\n    \"VDNKh\": (55.4916, 37.3828),\n    \"Tekstilshiki\": (55.4232, 37.4354)\n}\n\n# Calculate the pairwise distance matrix\ndef calculate_distance_matrix(coords_dict):\n    station_names = list(coords_dict.keys())\n    n_stations = len(station_names)\n    distance_matrix = np.zeros((n_stations, n_stations))\n\n    for i in range(n_stations):\n        for j in range(n_stations):\n            if i != j:\n                distance_matrix[i][j] = geodesic(coords_dict[station_names[i]], coords_dict[station_names[j]]).kilometers\n            else:\n                distance_matrix[i][j] = 0\n\n    return station_names, distance_matrix\n\nstation_names, distance_matrix = calculate_distance_matrix(stations_coordinates)\ndistance_matrix, station_names\n\n\n(array([[ 0.        , 11.8795683 , 13.32121955, 12.47476534, 10.76730899,\n         17.60531703, 12.02141556,  9.45093857, 19.14704757,  7.64111262,\n         15.93607716],\n        [11.8795683 ,  0.        ,  7.30513134,  2.81466242,  1.18120326,\n          9.11269391,  3.72338261, 10.11508331,  9.57219188,  4.41903113,\n          4.22314047],\n        [13.32121955,  7.30513134,  0.        ,  4.57796148,  7.6589319 ,\n          4.46432896,  3.58332329,  5.79065187,  6.36819994,  9.01496207,\n          9.83338314],\n        [12.47476534,  2.81466242,  4.57796148,  0.        ,  3.47233987,\n          6.48795948,  1.14799012,  8.3873321 ,  7.28559471,  5.95292621,\n          5.58202776],\n        [10.76730899,  1.18120326,  7.6589319 ,  3.47233987,  0.        ,\n          9.94233619,  4.13173454,  9.75035755, 10.55879981,  3.24552038,\n          5.21047455],\n        [17.60531703,  9.11269391,  4.46432896,  6.48795948,  9.94233619,\n          0.        ,  6.18218626, 10.11534229,  2.11882318, 12.26352411,\n          9.73385562],\n        [12.02141556,  3.72338261,  3.58332329,  1.14799012,  4.13173454,\n          6.18218626,  0.        ,  7.28489644,  7.29627254,  6.08240265,\n          6.72859259],\n        [ 9.45093857, 10.11508331,  5.79065187,  8.3873321 ,  9.75035755,\n         10.11534229,  7.28489644,  0.        , 12.12071314,  9.02961058,\n         13.89681105],\n        [19.14704757,  9.57219188,  6.36819994,  7.28559471, 10.55879981,\n          2.11882318,  7.29627254, 12.12071314,  0.        , 13.23410172,\n          9.24357874],\n        [ 7.64111262,  4.41903113,  9.01496207,  5.95292621,  3.24552038,\n         12.26352411,  6.08240265,  9.02961058, 13.23410172,  0.        ,\n          8.31043471],\n        [15.93607716,  4.22314047,  9.83338314,  5.58202776,  5.21047455,\n          9.73385562,  6.72859259, 13.89681105,  9.24357874,  8.31043471,\n          0.        ]]),\n ['Fizteh',\n  'Chkalovskaya',\n  'Slavyanski Boulevard',\n  'Park Kultury',\n  'Komsomolskaya',\n  'Yugo-Zapadnaya',\n  'Kievskaya',\n  'Strogino',\n  'Konkovo',\n  'VDNKh',\n  'Tekstilshiki'])\n\n\n\nimport matplotlib.pyplot as plt\n\ndef gradient_descent_mds(D, dimensions=2, learning_rate=0.01, iterations=1000):\n    \"\"\"\n    Perform Multidimensional Scaling using Gradient Descent.\n\n    :param D: NxN distance matrix.\n    :param dimensions: Number of dimensions for the output coordinates.\n    :param learning_rate: Learning rate for gradient descent.\n    :param iterations: Number of iterations.\n    :return: Nx2 matrix of coordinates.\n    \"\"\"\n    N = D.shape[0]\n    # Random initialization of coordinates\n    X = np.random.rand(N, dimensions)\n\n    for iteration in range(iterations):\n        # Compute distance matrix for current coordinates\n        D_hat = np.sqrt(np.sum((X[:, np.newaxis, :] - X[np.newaxis, :, :]) ** 2, axis=2))\n\n        # Compute gradient\n        delta = D_hat - D\n        for i in range(N):\n            for j in range(N):\n                if i != j:\n                    grad = (delta[i, j] / D_hat[i, j]) * (X[i, :] - X[j, :])\n                    X[i, :] -= learning_rate * grad\n\n    return X\n\n# Perform MDS\ncoordinates_mds = gradient_descent_mds(distance_matrix)\n\n# Plotting the results\nplt.figure(figsize=(10, 8))\nplt.scatter(coordinates_mds[:, 0], coordinates_mds[:, 1])\nfor i, name in enumerate(station_names):\n    plt.annotate(name, (coordinates_mds[i, 0], coordinates_mds[i, 1]))\nplt.title(\"2D Representation of Moscow Metro Stations using MDS\")\nplt.xlabel(\"X Coordinate\")\nplt.ylabel(\"Y Coordinate\")\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom geopy.distance import geodesic\n\n# Estimated GPS coordinates for the specified Moscow Metro stations\nstations_coordinates = {\n    \"Fizteh\": (55.5518, 37.3247),\n    \"Chkalovskaya\": (55.4523, 37.3926),\n    \"Slavyanski Boulevard\": (55.4347, 37.2814),\n    \"Park Kultury\": (55.4409, 37.3529),\n    \"Komsomolskaya\": (55.4629, 37.3918),\n    \"Yugo-Zapadnaya\": (55.3949, 37.2900),\n    \"Kievskaya\": (55.4440, 37.3356),\n    \"Strogino\": (55.4814, 37.2411),\n    \"Konkovo\": (55.3800, 37.3108),\n    \"VDNKh\": (55.4916, 37.3828),\n    \"Tekstilshiki\": (55.4232, 37.4354)\n}\n\n# Calculate the pairwise distance matrix\ndef calculate_distance_matrix(coords_dict):\n    station_names = list(coords_dict.keys())\n    n_stations = len(station_names)\n    distance_matrix = np.zeros((n_stations, n_stations))\n\n    for i in range(n_stations):\n        for j in range(n_stations):\n            if i != j:\n                distance_matrix[i][j] = geodesic(coords_dict[station_names[i]], coords_dict[station_names[j]]).kilometers\n            else:\n                distance_matrix[i][j] = 0\n\n    return station_names, distance_matrix\n\nstation_names, distance_matrix = calculate_distance_matrix(stations_coordinates)\n\n# Gradient Descent MDS with data collection for animation\ndef gradient_descent_mds(D, dimensions=2, learning_rate=0.01, iterations=1000):\n    N = D.shape[0]\n    X = np.random.rand(N, dimensions)\n\n    # Records for animation\n    positions_record = []\n    loss_record = []\n\n    for iteration in range(iterations):\n        D_hat = np.sqrt(np.sum((X[:, np.newaxis, :] - X[np.newaxis, :, :]) ** 2, axis=2))\n        delta = D_hat - D\n        loss = np.sum(delta**2)  # Loss calculation\n        positions_record.append(X.copy())\n        loss_record.append(loss)\n\n        # Gradient descent update\n        for i in range(N):\n            for j in range(N):\n                if i != j:\n                    grad = (delta[i, j] / D_hat[i, j]) * (X[i, :] - X[j, :])\n                    X[i, :] -= learning_rate * grad\n\n    return positions_record, loss_record\n\n# Perform MDS and collect data for animation\npositions_record, loss_record = gradient_descent_mds(distance_matrix, iterations=100)\n\n# Function to update each frame in the animation\ndef update_frame(num, positions_record, loss_record, station_names, scat, line, ax1, ax2):\n    # Clear previous station labels and tails\n    ax1.clear()\n    ax1.set_xlim(-10, 10)\n    ax1.set_ylim(-10, 10)\n    ax1.set_title('Station Positions')\n    ax1.set_xlabel('X Coordinate')\n    ax1.set_ylabel('Y Coordinate')\n\n    # Update station positions and draw tails\n    scat.set_offsets(positions_record[num])\n    for i, name in enumerate(station_names):\n        # Draw the tail for each station\n        if num &gt; 0:\n            for past in range(num):\n                ax1.plot([positions_record[past][i, 0], positions_record[past+1][i, 0]],\n                         [positions_record[past][i, 1], positions_record[past+1][i, 1]],\n                         color='gray', alpha=0.5)\n\n        # Label the final position of the station\n        if num == len(positions_record) - 1:\n            ax1.text(positions_record[num][i, 0], positions_record[num][i, 1], name, fontsize=8)\n\n    # Update loss evolution plot\n    line.set_data(range(num + 1), loss_record[:num + 1])\n    ax2.set_xlim(0, 100)\n    ax2.set_ylim(min(loss_record), max(loss_record))\n    ax2.set_title('Loss Evolution')\n    ax2.set_xlabel('Iteration')\n    ax2.set_ylabel('Loss')\n\n    return scat, line\n\n# Create the figure for animation\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\n# Scatter plot for station positions\nscat = ax1.scatter([], [], s=30)\nax1.set_xlim(-10, 10)\nax1.set_ylim(-10, 10)\nax1.set_title('Station Positions')\nax1.set_xlabel('X Coordinate')\nax1.set_ylabel('Y Coordinate')\n\n# Line plot for loss evolution\nline, = ax2.semilogy([], [], lw=2)\nax2.set_xlim(0, 100)\nax2.set_ylim(min(loss_record), max(loss_record))\nax2.set_title('Loss Evolution')\nax2.set_xlabel('Iteration')\nax2.set_ylabel('Loss')\n\n# Creating the animation\nani = animation.FuncAnimation(fig, update_frame, frames=100, fargs=(positions_record, loss_record, station_names, scat, line, ax1, ax2), blit=False, repeat=False)\n\n# Saving the animation\nani.save('moscow_metro_mds_animation.mp4', writer='ffmpeg', fps=10)\n\n\n\n\n\n\n\n\n\npositions_record[-1]\n\narray([[ 8.02981262,  8.63001461],\n       [ 2.25518938, -2.67734712],\n       [-3.33834951,  1.74376926],\n       [-0.07801013, -1.44497825],\n       [ 3.09715112, -2.01602395],\n       [-6.46246911, -1.07594008],\n       [-0.48882653, -0.35399986],\n       [-1.32473107,  7.16441546],\n       [-6.86842661, -3.2663034 ],\n       [ 5.7281098 ,  1.15859194],\n       [ 4.50067386, -4.182293  ]])\n\n\n\nnp.max()\n\n100"
  }
]